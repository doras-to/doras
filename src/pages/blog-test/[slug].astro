---
interface Post {
    id: number;
    date: string;
    date_gmt: string;
    guid: { rendered: string };
    modified: string;
    modified_gmt: string;
    slug: string;
    status: string;
    type: string;
    link: string;
    title: { rendered: string };
    content: { rendered: string; protected: boolean };
    excerpt: { rendered: string; protected: boolean };
    author: number;
    featured_media: number;
    comment_status: string;
    ping_status: string;
    sticky: boolean;
    template: string;
    format: string;
    meta: { footnotes: string };
    categories: number[];
    tags: string[];
    _links: {
        self: { href: string }[];
        collection: { href: string }[];
        about: { href: string }[];
        author: { embeddable: boolean; href: string }[];
        replies: { embeddable: boolean; href: string }[];
        versionHistory: { count: number; href: string }[];
        predecessorVersion: { id: number; href: string }[];
        "wp:attachment": { href: string }[];
        "wp:term": { taxonomy: string; embeddable: boolean; href: string }[];
        curies: { name: string; href: string; templated: boolean }[];
    };
}

import Layout from "@/layouts/MDLayout.astro";
import Container from "@/components/container.astro";
const { slug } = Astro.params;

let res = await fetch(`https://cms.doras.to/wp-json/wp/v2/posts?slug=${slug}`);
let [post]: Post[] = await res.json();

// Fetch the category name
let categoryRes = await fetch(`https://cms.doras.to/wp-json/wp/v2/categories/${post.categories[0]}`);
let category = await categoryRes.json();

// Fetch the author name
let authorRes = await fetch(`https://cms.doras.to/wp-json/wp/v2/users/${post.author}`);
let author = await authorRes.json();

// The getStaticPaths() is required for static Astro sites.
// If using SSR, you will not need this function.

let userRes = await fetch(`https://api.doras.to/user/${author.name}`);
let user: { username: string; displayname: string; pic: string } = await userRes.json();
export async function getStaticPaths() {
    let data = await fetch("`https://cms.doras.to/wp-json/wp/v2/posts");
    let posts = await data.json();

    return posts.map((post: Post) => ({
        params: { slug: post.slug },
        props: { post: post }
    }));
}
---

<Layout title={post.title.rendered}>
    <Container>
        <div class="mx-auto max-w-3xl text-center mt-6">
            <article>
                <span class="text-primary-500 uppercase tracking-wider text-sm font-black">{category.name}</span>
                <h1 class="text-3xl lg:text-4xl font-bold lg:tracking-tight mt-1 lg:leading-tight text-surface-900" set:html={post.title.rendered} />
                <div class="flex gap-2 mt-3 items-center justify-center text-sm flex-wrap md:flex-nowrap">
                    <a href={`https://doras.to/${user.username}`} class="text-surface-600">
                        <div class="flex items-center gap-2">
                            <img src={user.pic} class="w-6 rounded-xl" />
                            <span class="font-bold">{user.displayname}</span>
                        </div>
                    </a>
                    <!-- <span class="text-surface-600 hidden md:block">•</span> -->
                    <!-- <div class="w-full md:w-auto flex flex-wrap justify-center gap-3">
                        {entry.data.tags.map((tag) => <span class="text-sm text-primary-500">#{tag}</span>)}
                    </div> -->
                    <a href="/blog" class="font-bold text-primary-500 transition">← Back to Blog</a>
                </div>
                <Fragment set:html={post.content.rendered} />
            </article>
        </div>
    </Container>
</Layout>
